/*
지니레코드에서는 불세출의 가수 조영필의 라이브 동영상을 DVD로 만들어 판매하려 한다. 
DVD에는 총 N개의 곡이 들어가는데, DVD에 녹화할 때에는 라이브에서의 순서가 그대로 유지
되어야 한다. 순서가 바뀌는 것을 우리의 가수 조영필씨가 매우 싫어한다. 즉, 1번 노래와 5번 
노래를 같은 DVD에 녹화하기 위해서는 1번과 5번 사이의 모든 노래도 같은 DVD에 녹화해야 
한다. 또한 한 노래를 쪼개서 두 개의 DVD에 녹화하면 안된다.
지니레코드 입장에서는 이 DVD가 팔릴 것인지 확신할 수 없기 때문에 이 사업에 낭비되는 
DVD를 가급적 줄이려고 한다. 고민 끝에 지니레코드는 M개의 DVD에 모든 동영상을 녹화하기
로 하였다. 이 때 DVD의 크기(녹화 가능한 길이)를 최소로 하려고 한다. 그리고 M개의 DVD는 
모두 같은 크기여야 제조원가가 적게 들기 때문에 꼭 같은 크기로 해야 한다.

▣ 입력설명
첫째 줄에 자연수 N(1≤N≤1,000), M(1≤M≤N)이 주어진다. 다음 줄에는 조영필이 라이브에서 
부른 순서대로 부른 곡의 길이가 분 단위로(자연수) 주어진다. 부른 곡의 길이는 10,000분을 
넘지 않는다고 가정하자.
▣ 출력설명
첫 번째 줄부터 DVD의 최소 용량 크기를 출력하세요.
▣ 입력예제 1 
9 3
1 2 3 4 5 6 7 8 9
▣ 출력예제 1
17

설명 : 3개의 DVD용량이 17분짜리이면 (1, 2, 3, 4, 5) (6, 7), (8, 9) 이렇게 3개의 DVD로 녹음을 할
수 있다. 17분 용량보다 작은 용량으로는 3개의 DVD에 모든 영상을 녹화할 수 없다.
*/
/*
* 결정 알고리즘은 이분 검색에 기초한다,

풀이
- CD하나 당 최소 크기는 배열의 가장 큰 값이다. (곡 하나를 쪼갤 수 없기 때문)
- CD하나 당 최대 크기는 배열의 합이다.
- lt가 rt보다 같거나 작을때 동안 반복한다.
- 배열을 순회하여 각 요소를 더하면서 CD의 크기와 비교하여 총 CD의 갯수를 구한다.
- CD의 갯수가 정해진 갯수보다 크다면 CD의 크기를 늘려야하므로 lt의 값을 mid+1로 변경한다.
- CD의 갯수가 정해진 갯수보다 작다면 가능하지만 정해진 크기일 때를 구해야하므로 rt를 mid-1로 변경한다.
- CD의 갯수가 정해진 갯수와 같다면 answer에 대입하고 반복문을 종료한다.
*/
function count(arr, max) {
  //총 cd갯수를 return
  //max = cd 최댓값
  let sum = 0;
  let cnt = 1; //마지막은 항상 CD크기보다 같거나 작으므로 1에서 시작한다.

  for (let x of arr) {
    if (sum + x <= max) {
      //sum+현재값 이 CD최대값 보다 작거나 같으면
      //sum+x
      sum += x;
    } else {
      //CD최대값보다 크면
      //sum초기화 cnt증가
      sum = x;
      cnt++;
    }
  }
  console.log(cnt);
  return cnt;
}
(function solution(n, m, arr) {
  //m개의 dvd를 만들어야함.
  let answer = 0;
  let lt = Math.max(...arr);
  let rt = arr.reduce((acc, cur) => acc + cur, 0);

  while (lt <= rt) {
    const mid = parseInt((lt + rt) / 2);

    if (count(arr, mid) === m) {
      answer = mid;
      break;
    } else if (count(arr, mid) < m) {
      //m보다 작으면 큰 값들은 당연히 가능하므로 오른쪽은 볼 필요가 없음
      rt = mid - 1;
    } else {
      //m보다 크면 cd의 크기를 늘려야하므로 lt값을 mid+1로 변경
      lt = mid + 1;
    }
  }

  console.log(answer);
})(9, 3, [1, 2, 3, 4, 5, 6, 7, 8, 9]);
