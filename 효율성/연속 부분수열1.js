/*
N개의 수로 이루어진 수열이 주어집니다.
이 수열에서 연속부분수열의 합이 특정숫자 M이 되는 경우가 몇 번 있는지 구하는 프로그램을 
작성하세요.
만약 N=8, M=6이고 수열이 다음과 같다면
1 2 1 3 1 1 1 2 
합이 6이 되는 연속부분수열은 {2, 1, 3}, {1, 3, 1, 1}, {3, 1, 1, 1}로 총 3가지입니다.

▣ 입력설명
첫째 줄에 N(1≤N≤100,000), M(1≤M≤100,000,000)이 주어진다. 
수열의 원소값은 1,000을 넘지 않는 자연수이다.
▣ 출력설명
첫째 줄에 경우의 수를 출력한다.
▣ 입력예제 1 
8 6
1 2 1 3 1 1 1 2
▣ 출력예제 1
3

*/
/*
풀이
- for문은 총 1번만 반복한다.
- 시작 값은 i, 끝 값은 i+1 부터 sum이 m과 같거나 클때까지 반복하여 변경한다
- 시작 값 부터 끝 값 까지의 원소의 합을 구한다.
- 합이 m보다 작으면 끝 값을 옮기고, 같으면 출력, 크면 다음 반복으로 넘어간다.
- 시간복잡도는 O(n+m)이다. 최악의 경우는 O(N^2)이다.
*/
(function solution(n, m, arr) {
  let answer = [];

  for (let i = 0; i < n; i++) {
    let rt = i + 1;
    let sum = arr[i];
    let temp = [arr[i]];

    while (sum + arr[rt] <= m) {
      sum += arr[rt];
      temp.push(arr[rt++]);
    }

    if (sum !== m) continue;
    answer.push(temp);
  }

  console.log(answer, answer.length);
})(13, 6, [1, 2, 1, 3, 1, 1, 1, 2, 1, 1, 3, 2, 2]);
