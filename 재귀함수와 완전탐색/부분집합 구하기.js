/*
자연수 N이 주어지면 1부터 N까지의 원소를 갖는 집합의 부분집합을 모두 출력하는 프로그램
을 작성하세요. 
▣ 입력설명
첫 번째 줄에 자연수 N(1<=N<=10)이 주어집니다.
▣ 출력설명
첫 번째 줄부터 각 줄에 하나씩 부분집합을 아래와 출력예제와 같은 순서로 출력한다. 
단 공집합은 출력하지 않습니다.
▣ 입력예제 1 
3
▣ 출력예제 1
1 2 3
1 2
1 3
1
2 3
2
3
 */
/*
해설
- DFS에 1~n까지 넣으면서 해당 숫자가 존재할 때, 존재하지 않을 때로 나누어 탐색을 한다.
- 존재하는 경우는 해당 인덱스의 값이 1, 존재하지 않는 경우는 해당 인덱스의 값이 0 이다.

풀이
- 초기값은 1을 대입한다.
- DFS의 인자값이 n보다 작다면 배열을 이용해 해당 인덱스의 값이 1일때, 0일때 나눠서 DFS를 호출한다.
- DFS의 인자값이 n보다 크거나 같으면 반복문을 이용해 배열을 탐색하여 값이 1일 때 인덱스를 출력한다.
*/
(function solution(n) {
  let answer = [];
  let arr = new Array(n).fill(0);
  function DFS(v) {
    if (v >= n + 1) {
      let temp = "";
      for (let i = 0; i < arr.length; i++) {
        if (arr[i] === 1) temp += i + 1 + " ";
      }
      answer.push(temp.trim());
    } else {
      arr[v - 1] = 1;
      DFS(v + 1);
      arr[v - 1] = 0;
      DFS(v + 1);
    }
  }
  DFS(1);

  console.log(answer);
})(3);
